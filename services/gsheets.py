"""
–ú–æ–¥—É–ª—å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å Google Sheets API
–í–µ—Ä—Å–∏—è: 2.0
"""

import gspread
from oauth2client.service_account import ServiceAccountCredentials
from datetime import datetime
import logging
from pathlib import Path

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)
logger = logging.getLogger(__name__)

class GoogleSheetsService:
    """–°–µ—Ä–≤–∏—Å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å Google Sheets"""

    def __init__(self, creds_path: str, spreadsheet_name: str):
        """
        –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–µ—Ä–≤–∏—Å–∞

        Args:
            creds_path (str): –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É —É—á–µ—Ç–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
            spreadsheet_name (str): –ù–∞–∑–≤–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã
        """
        self.creds_path = Path(creds_path)
        self.spreadsheet_name = spreadsheet_name
        self.worksheet = None
        self._authorize()

    def _authorize(self):
        """–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –≤ Google API"""
        try:
            scope = [
                "https://spreadsheets.google.com/feeds",
                "https://www.googleapis.com/auth/spreadsheets",
                "https://www.googleapis.com/auth/drive.file",
                "https://www.googleapis.com/auth/drive"
            ]
            creds = ServiceAccountCredentials.from_json_keyfile_name(str(self.creds_path), scope)
            client = gspread.authorize(creds)
            sheet = client.open(self.spreadsheet_name)
            self.worksheet = sheet.get_worksheet(0)
            logger.info("–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ")
        except Exception as e:
            logger.exception("–û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏")

    def append_row(self, data: list):
        """–î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å—Ç—Ä–æ–∫–∏ –≤ —Ç–∞–±–ª–∏—Ü—É"""
        try:
            self.worksheet.append_row(data, value_input_option="USER_ENTERED")
            logger.info("–°—Ç—Ä–æ–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ —Ç–∞–±–ª–∏—Ü—É")
        except Exception as e:
            logger.exception("–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Å—Ç—Ä–æ–∫–∏")

    def update_status(self, row_id: str, status: str):
        """–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–ª–æ–Ω–∫–∏ '–°—Ç–∞—Ç—É—Å' (5-—è –∫–æ–ª–æ–Ω–∫–∞)"""
        try:
            row_index = int(row_id)
            self.worksheet.update_cell(row_index, 5, status)
            logger.info(f"–°—Ç–∞—Ç—É—Å —Å—Ç—Ä–æ–∫–∏ {row_id} –æ–±–Ω–æ–≤–ª—ë–Ω –Ω–∞ {status}")
        except Exception as e:
            logger.exception("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞")


# üéØ –≠–∫–∑–µ–º–ø–ª—è—Ä –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
creds_file_path = "D:/programming/cadastr-bot/secure/cadastr-bots/client_secret.json"
spreadsheet_name = "–ö–∞–¥–∞—Å—Ç—Ä–æ–≤—ã–µ –∑–∞—è–≤–∫–∏"

gs_service = GoogleSheetsService(creds_file_path, spreadsheet_name)

# ‚úèÔ∏è –£—Ç–∏–ª–∏—Ç—ã
def append_to_sheet(data: list):
    gs_service.append_row(data)

def update_status(row_id: str, status: str):
    gs_service.update_status(row_id, status)
