"""
ü§ñ –ö–õ–ò–ï–ù–¢–°–ö–ò–ô –ë–û–¢ –î–õ–Ø –ì–ï–û–î–ï–ó–ò–ß–ï–°–ö–ò–• –£–°–õ–£–ì

‚ñå –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª:
- –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é: –ó–∞—è–≤–∫–∞, –ß–∞—Å—Ç—ã–µ –≤–æ–ø—Ä–æ—Å—ã, –ö–æ–Ω—Ç–∞–∫—Ç—ã, –û –Ω–∞—Å
- –ó–∞—è–≤–∫–∞: –ø–æ—à–∞–≥–æ–≤—ã–π –≤–≤–æ–¥ –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏ –∏–ª–∏ –∞–¥—Ä–µ—Å–∞ ‚Üí —Ç–µ–ª–µ—Ñ–æ–Ω–∞
- –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å Google Sheets (append_to_sheet)

"""

import logging
from datetime import datetime
import pytz
from typing import Dict, Any

from telegram import (
    Update,
    KeyboardButton,
    ReplyKeyboardMarkup,
    ReplyKeyboardRemove,
)
from telegram.ext import (
    Application,
    CommandHandler,
    MessageHandler,
    ConversationHandler,
    ContextTypes,
    filters,
)

from services.gsheets import append_to_sheet

# üìå –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã —Å–æ—Å—Ç–æ—è–Ω–∏–π –¥–∏–∞–ª–æ–≥–∞
CHOOSING, LOCATION, PHONE = range(3)

# ‚è∞ –í—Ä–µ–º–µ–Ω–Ω–∞—è –∑–æ–Ω–∞
TIMEZONE = pytz.timezone("Europe/Moscow")

# ü§ñ –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
main_keyboard = ReplyKeyboardMarkup([
    ["üì® –û—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É"],
    ["‚ùì –ß–∞—Å—Ç—ã–µ –≤–æ–ø—Ä–æ—Å—ã", "üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã", "‚ÑπÔ∏è –û –Ω–∞—Å"]
], resize_keyboard=True)

# üöÄ –°—Ç–∞—Ä—Ç
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –Ø –±–æ—Ç –¥–ª—è –ø–æ–¥–∞—á–∏ –∑–∞—è–≤–æ–∫ –Ω–∞ –≥–µ–æ–¥–µ–∑–∏—á–µ—Å–∫–∏–µ —É—Å–ª—É–≥–∏.\n\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—ã–π –ø—É–Ω–∫—Ç –≤ –º–µ–Ω—é:",
        reply_markup=main_keyboard
    )
    return CHOOSING

# üì® –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞—è–≤–∫–∏: –≤—ã–±–æ—Ä –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏ –∏–ª–∏ –∞–¥—Ä–µ—Å–∞
async def send_request(update: Update, context: ContextTypes.DEFAULT_TYPE):
    keyboard = [
        [KeyboardButton("üìç –û—Ç–ø—Ä–∞–≤–∏—Ç—å –≥–µ–æ–ª–æ–∫–∞—Ü–∏—é", request_location=True)],
        [KeyboardButton("üè† –í–≤–µ—Å—Ç–∏ –∞–¥—Ä–µ—Å –≤—Ä—É—á–Ω—É—é")]
    ]
    await update.message.reply_text(
        "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∞–¥—Ä–µ—Å –æ–±—ä–µ–∫—Ç–∞ –∏–ª–∏ –ø–æ–¥–µ–ª–∏—Ç–µ—Å—å –≥–µ–æ–ª–æ–∫–∞—Ü–∏–µ–π:",
        reply_markup=ReplyKeyboardMarkup(keyboard, resize_keyboard=True, one_time_keyboard=True)
    )
    return LOCATION

# üìç –û–±—Ä–∞–±–æ—Ç–∫–∞ –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏
async def handle_location(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if update.message.location:
        lat = update.message.location.latitude
        lon = update.message.location.longitude
        context.user_data["address"] = f"–ì–µ–æ–ª–æ–∫–∞—Ü–∏—è: {lat}, {lon}"
    else:
        context.user_data["address"] = update.message.text.strip()
    await update.message.reply_text(
        "–¢–µ–ø–µ—Ä—å –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞:",
        reply_markup=ReplyKeyboardRemove()
    )
    return PHONE

# ‚òéÔ∏è –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –∏ –æ—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞—è–≤–∫–∏
async def handle_phone(update: Update, context: ContextTypes.DEFAULT_TYPE):
    phone = update.message.text.strip()
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞ (–ø—Ä–∏–º–µ—Ä: +7 999 123 45 67)
    if not re.match(r'^(\+7|8)\s?\(?\d{3}\)?[\s\-]?\d{3}[\s\-]?\d{2}[\s\-]?\d{2}$', phone):
        await update.message.reply_text("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –Ω–æ–º–µ—Ä–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –≤ —Ñ–æ—Ä–º–∞—Ç–µ +7 XXX XXX XX XX")
        return PHONE

    context.user_data["phone"] = phone
    address = context.user_data.get("address", "–ù–µ —É–∫–∞–∑–∞–Ω–æ")
    timestamp = datetime.now(TIMEZONE).strftime("%Y-%m-%d %H:%M:%S")

    append_to_sheet([
        "",  # –ü—É—Å—Ç–æ–π ID (–∑–∞–ø–æ–ª–Ω—è–µ—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤ Google Sheets)
        address,
        phone,
        timestamp,
        "–ù–æ–≤–∞—è"
    ])

    await update.message.reply_text(
        "‚úÖ –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞!\n–ù–∞—à —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.",
        reply_markup=ReplyKeyboardMarkup([["üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã", "üîô –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"]], resize_keyboard=True)
    )
    return ConversationHandler.END

# üöÄ –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
async def run_client_bot():
    from config import TELEGRAM_CLIENT_TOKEN

    app = Application.builder().token(TELEGRAM_CLIENT_TOKEN).build()

    conv_handler = ConversationHandler(
        entry_points=[MessageHandler(filters.Regex("üì® –û—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É"), send_request)],
        states={
            LOCATION: [MessageHandler(filters.LOCATION | filters.TEXT & ~filters.COMMAND, handle_location)],
            PHONE: [MessageHandler(filters.TEXT & ~filters.COMMAND, handle_phone)],
        },
        fallbacks=[CommandHandler("cancel", cancel)],
    )

    app.add_handler(CommandHandler("start", start))
    app.add_handler(conv_handler)
    app.add_handler(MessageHandler(filters.Regex("‚ùì –ß–∞—Å—Ç—ã–µ –≤–æ–ø—Ä–æ—Å—ã"), faq))
    app.add_handler(MessageHandler(filters.Regex("üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã"), contacts))
    app.add_handler(MessageHandler(filters.Regex("‚ÑπÔ∏è –û –Ω–∞—Å"), about))

    await app.run_polling()