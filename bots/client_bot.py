"""
Telegram –±–æ—Ç –¥–ª—è –∫–ª–∏–µ–Ω—Ç–æ–≤ (–≤–µ—Ä—Å–∏—è python-telegram-bot v20.x)
–û—Å–Ω–æ–≤–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª:
- –ü—Ä–∏–µ–º –∑–∞—è–≤–æ–∫ —Å –≥–µ–æ–¥–∞–Ω–Ω—ã–º–∏
- –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–µ –º–µ–Ω—é
- –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å Google Sheets
"""

import logging
from telegram import (
    Update,
    ReplyKeyboardMarkup,
    KeyboardButton,
    ReplyKeyboardRemove
)
from telegram.ext import (
    Application,
    CommandHandler,
    MessageHandler,
    ContextTypes,
    ConversationHandler,
    filters
)
from services.gsheets import append_to_sheet

# ==================== –ù–ê–°–¢–†–û–ô–ö–ê –õ–û–ì–ò–†–û–í–ê–ù–ò–Ø ====================
logging.basicConfig(
    format="%(asctime)s - %(name)s - %(levelname)s - %(message)s",
    level=logging.INFO,
    filename='client_bot.log'
)
logger = logging.getLogger(__name__)

# ==================== –ö–û–ù–°–¢–ê–ù–¢–´ –ò –°–û–°–¢–û–Ø–ù–ò–Ø ====================
(
    MAIN_MENU,
    GET_LOCATION,
    GET_PHONE,
    FAQ_HANDLER
) = range(4)  # –°–æ—Å—Ç–æ—è–Ω–∏—è –¥–∏–∞–ª–æ–≥–∞

# –≠–º–æ–¥–∑–∏ –¥–ª—è –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
EMOJI = {
    'home': 'üè†',
    'doc': 'üìÑ',
    'phone': 'üì±',
    'geo': 'üìç',
    'back': 'üîô',
    'quest': '‚ùì',
    'info': '‚ÑπÔ∏è'
}

# ==================== –¢–ï–ö–°–¢–û–í–´–ï –®–ê–ë–õ–û–ù–´ ====================
TEXTS = {
    'welcome': (
        f"{EMOJI['home']} <b>–ì–µ–æ–¥–µ–∑–∏—á–µ—Å–∫–∏–µ —É—Å–ª—É–≥–∏</b>\n\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –∏–∑ –º–µ–Ω—é –Ω–∏–∂–µ:"
    ),
    'request': (
        f"{EMOJI['doc']} <b>–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞</b>\n\n"
        "–ö–∞–∫ –≤—ã —Ö–æ—Ç–∏—Ç–µ —É–∫–∞–∑–∞—Ç—å –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ?"
    ),
    'location_received': (
        f"{EMOJI['geo']} <b>–ú–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ –ø–æ–ª—É—á–µ–Ω–æ</b>\n\n"
        "–¢–µ–ø–µ—Ä—å —É–∫–∞–∂–∏—Ç–µ –≤–∞—à —Ç–µ–ª–µ—Ñ–æ–Ω:"
    ),
    'phone_received': (
        f"{EMOJI['phone']} <b>–ó–∞—è–≤–∫–∞ –ø—Ä–∏–Ω—è—Ç–∞!</b>\n\n"
        "–ù–∞—à —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏ –≤ —Ç–µ—á–µ–Ω–∏–µ —Ä–∞–±–æ—á–µ–≥–æ –¥–Ω—è."
    ),
    'cancel': f"{EMOJI['back']} –î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ"
}

# ==================== –û–°–ù–û–í–ù–´–ï –û–ë–†–ê–ë–û–¢–ß–ò–ö–ò ====================
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å—Ç–∞—Ä—Ç–æ–≤–æ–π –∫–æ–º–∞–Ω–¥—ã –∏ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é"""
    menu_buttons = [
        [f"{EMOJI['doc']} –û—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É"],
        [f"{EMOJI['quest']} –í–æ–ø—Ä–æ—Å—ã", f"{EMOJI['info']} –ö–æ–Ω—Ç–∞–∫—Ç—ã"],
        ["–û –∫–æ–º–ø–∞–Ω–∏–∏"]
    ]
    
    await update.message.reply_text(
        text=TEXTS['welcome'],
        reply_markup=ReplyKeyboardMarkup(menu_buttons, resize_keyboard=True),
        parse_mode='HTML'
    )
    return MAIN_MENU

async def handle_request(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–π –∑–∞—è–≤–∫–∏"""
    location_buttons = [
        [KeyboardButton(f"{EMOJI['geo']} –û—Ç–ø—Ä–∞–≤–∏—Ç—å –≥–µ–æ–ª–æ–∫–∞—Ü–∏—é", request_location=True)],
        ["–£–∫–∞–∑–∞—Ç—å –∞–¥—Ä–µ—Å –≤—Ä—É—á–Ω—É—é"],
        [f"{EMOJI['back']} –ù–∞–∑–∞–¥"]
    ]
    
    await update.message.reply_text(
        text=TEXTS['request'],
        reply_markup=ReplyKeyboardMarkup(location_buttons, resize_keyboard=True),
        parse_mode='HTML'
    )
    return GET_LOCATION

async def receive_location(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ü–æ–ª—É—á–µ–Ω–∏–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è (–≥–µ–æ –∏–ª–∏ –∞–¥—Ä–µ—Å)"""
    if update.message.location:
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏
        loc = update.message.location
        context.user_data['location'] = f"lat:{loc.latitude}, lon:{loc.longitude}"
        logger.info(f"–ü–æ–ª—É—á–µ–Ω–∞ –≥–µ–æ–ª–æ–∫–∞—Ü–∏—è: {loc.latitude}, {loc.longitude}")
    else:
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ –∞–¥—Ä–µ—Å–∞
        context.user_data['location'] = update.message.text
        logger.info(f"–ü–æ–ª—É—á–µ–Ω –∞–¥—Ä–µ—Å: {update.message.text}")

    phone_buttons = [
        [KeyboardButton(f"{EMOJI['phone']} –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Ç–µ–ª–µ—Ñ–æ–Ω", request_contact=True)],
        [f"{EMOJI['back']} –ù–∞–∑–∞–¥"]
    ]
    
    await update.message.reply_text(
        text=TEXTS['location_received'],
        reply_markup=ReplyKeyboardMarkup(phone_buttons, resize_keyboard=True),
        parse_mode='HTML'
    )
    return GET_PHONE

async def receive_phone(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ü–æ–ª—É—á–µ–Ω–∏–µ –∫–æ–Ω—Ç–∞–∫—Ç–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö"""
    if update.message.contact:
        phone = update.message.contact.phone_number
    else:
        phone = update.message.text

    try:
        # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ Google Sheets
        append_to_sheet(
            address=context.user_data['location'],
            phone=phone
        )
        logger.info("–î–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ Google Sheets")
        
        await update.message.reply_text(
            text=TEXTS['phone_received'],
            reply_markup=ReplyKeyboardRemove(),
            parse_mode='HTML'
        )
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è: {e}")
        await update.message.reply_text(
            "‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –∑–∞—è–≤–∫–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.",
            reply_markup=ReplyKeyboardRemove()
        )
    
    return await start(update, context)  # –í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é

async def cancel(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û—Ç–º–µ–Ω–∞ —Ç–µ–∫—É—â–µ–≥–æ –¥–µ–π—Å—Ç–≤–∏—è"""
    await update.message.reply_text(
        text=TEXTS['cancel'],
        reply_markup=ReplyKeyboardRemove()
    )
    return await start(update, context)

# ==================== –ó–ê–ü–£–°–ö –ë–û–¢–ê ====================
def run_client_bot(token: str):
    """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∏ –∑–∞–ø—É—Å–∫ –±–æ—Ç–∞"""
    try:
        logger.info("–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–ª–∏–µ–Ω—Ç—Å–∫–æ–≥–æ –±–æ—Ç–∞...")
        
        # –°–æ–∑–¥–∞–µ–º Application
        application = Application.builder().token(token).build()
        
        # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ ConversationHandler
        conv_handler = ConversationHandler(
            entry_points=[CommandHandler("start", start)],
            states={
                MAIN_MENU: [
                    MessageHandler(
                        filters.Regex(f"^{EMOJI['doc']} –û—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É$"),
                        handle_request
                    )
                ],
                GET_LOCATION: [
                    MessageHandler(filters.LOCATION, receive_location),
                    MessageHandler(filters.TEXT & ~filters.COMMAND, receive_location),
                    MessageHandler(
                        filters.Regex(f"^{EMOJI['back']} –ù–∞–∑–∞–¥$"),
                        cancel
                    )
                ],
                GET_PHONE: [
                    MessageHandler(filters.CONTACT, receive_phone),
                    MessageHandler(filters.TEXT & ~filters.COMMAND, receive_phone),
                    MessageHandler(
                        filters.Regex(f"^{EMOJI['back']} –ù–∞–∑–∞–¥$"),
                        cancel
                    )
                ]
            },
            fallbacks=[CommandHandler("cancel", cancel)],
        )
        
        # –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
        application.add_handler(conv_handler)
        
        # –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
        logger.info("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –≤ —Ä–µ–∂–∏–º–µ polling...")
        application.run_polling()
        
    except Exception as e:
        logger.critical(f"–û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞: {e}")
        raise